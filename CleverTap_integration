Here’s a step-by-step guide to completing the entire CleverTap integration and product setup from scratch:

### *Tech Section:*

#### *1. Basic CleverTap Integration on a Sample Website*

1. *Create a basic HTML page:*
   - Open your code editor (e.g., VS Code, Sublime, etc.) and create an index.html file with a basic structure:
     html
     <!DOCTYPE html>
     <html lang="en">
     <head>
         <meta charset="UTF-8">
         <meta name="viewport" content="width=device-width, initial-scale=1.0">
         <title>CleverTap Integration</title>
     </head>
     <body>
         <!-- CleverTap Integration Goes Here -->
     </body>
     </html>
     

2. *Add the CleverTap SDK:*
   - Head to CleverTap’s developer portal and log in or create a free account.
   - After creating a CleverTap account, you will get your *Account ID*.
   - In your index.html, include the CleverTap SDK script inside the <head> section, replacing YOUR_ACCOUNT_ID with your CleverTap account ID:
     html
     <script type="text/javascript">
        var clevertap = {event:[], profile:[], account:[], onUserLogin:[], notifications:[], privacy:[]};
        clevertap.account.push({"id": "YOUR_ACCOUNT_ID"});
        clevertap.privacy.push({optOut: false});
        clevertap.privacy.push({useIP: true});
        (function () {
            var wzrk = document.createElement('script');
            wzrk.type = 'text/javascript';
            wzrk.async = true;
            wzrk.src = 'https://cdn.clevertap.com/js/wzrk.js';
            var s = document.getElementsByTagName('script')[0];
            s.parentNode.insertBefore(wzrk, s);
        })();
     </script>
     

#### *2. Add a Button on the Webpage*

1. *Add a button to the webpage:*
   - Inside the <body> of your HTML file, add a button element:
     html
     <button id="productViewedBtn">View Product</button>
     

2. *Style the button (optional):*
   - To make it more visually appealing, add some CSS (optional):
     html
     <style>
        button {
            padding: 10px 20px;
            font-size: 16px;
            cursor: pointer;
        }
     </style>
     

#### *3. On Click of the Button, Push the "Product Viewed" Event*

1. *Create a JavaScript function to trigger an event:*
   - In the <body> or inside a <script> tag in your HTML, create a JavaScript function that will be triggered when the button is clicked.
   - This function will push the *Product Viewed* event to CleverTap:
     html
     <script type="text/javascript">
        document.getElementById('productViewedBtn').onclick = function () {
            clevertap.event.push("Product Viewed", {
                "Product ID": 1,
                "Product Name": "CleverTap",
                "Product Image": "https://d35fo82fjcw0y8.cloudfront.net/2018/07/26020307/customer-success-clevertap.jpg"
            });
        };
     </script>
     
   - When the button is clicked, the event will send the product details (Product ID, Name, and Image URL) to the CleverTap dashboard.

#### *4. Push Email ID to the User Profile*

1. *Modify the previous JavaScript function to also update the user profile with an email:*
   - After pushing the "Product Viewed" event, add code to push the email to the user profile in CleverTap.
   - In the same onclick function:
     html
     document.getElementById('productViewedBtn').onclick = function () {
        clevertap.event.push("Product Viewed", {
            "Product ID": 1,
            "Product Name": "CleverTap",
            "Product Image": "https://d35fo82fjcw0y8.cloudfront.net/2018/07/26020307/customer-success-clevertap.jpg"
        });

        clevertap.profile.push({
            "Site": {
                "Email": "jidesh+YOUR_EMAIL@clevertap.com"
            }
        });
     };
     
   - Replace YOUR_EMAIL with your email ID.

#### *5. (Optional) Integrate Web Push Service Using Firebase*

1. *Set up a Firebase project:*
   - Go to the [Firebase Console](https://console.firebase.google.com/) and create a new project.
   - From the project settings, obtain your Firebase credentials (apiKey, authDomain, etc.).
   
2. *Configure Firebase with CleverTap:*
   - Go to the CleverTap dashboard and enable Firebase push integration in the *Settings* under the *Push Notifications* section.
   - Follow the documentation: [CleverTap Web Push](https://developer.clevertap.com/docs/web#step-2-add-firebase-project-credentials).

3. *Integrate Firebase in your website:*
   - In your index.html, include the Firebase SDK:
     html
     <script src="https://www.gstatic.com/firebasejs/7.20.0/firebase-app.js"></script>
     <script src="https://www.gstatic.com/firebasejs/7.20.0/firebase-messaging.js"></script>
     <script>
         var firebaseConfig = {
            apiKey: "YOUR_API_KEY",
            authDomain: "YOUR_PROJECT_ID.firebaseapp.com",
            projectId: "YOUR_PROJECT_ID",
            storageBucket: "YOUR_PROJECT_ID.appspot.com",
            messagingSenderId: "YOUR_MESSAGING_SENDER_ID",
            appId: "YOUR_APP_ID"
         };
         firebase.initializeApp(firebaseConfig);
         const messaging = firebase.messaging();
     </script>
     

---

### *Product Section:*

#### *1. Add Your Email Credentials on CleverTap Dashboard*

1. *Log in to the CleverTap dashboard:*
   - Go to *Settings* > *Account Settings*.
   - Under *Email Settings*, add your email credentials with your name as the nickname.

#### *2. Create an Email Campaign*

1. *Navigate to Campaigns:*
   - Go to *Campaigns* > *Email Campaigns*.
   - Create a new email campaign for users who triggered the "Product Viewed" event with *Product ID = 1*.

2. *Set Targeting Criteria:*
   - Use the event filter: *Product Viewed* where *Product ID* is equal to 1 and select the appropriate time range (users who viewed today).

3. *Design the Email:*
   - Customize the email content and subject line.

#### *3. Upload Users Using CSV*

1. *Prepare a CSV File:*
   - Create a CSV file with email addresses and a custom property, uploaded_users.
   - Example CSV content:
     csv
     email,uploaded_users
     user1@example.com,true
     user2@example.com,true
     

2. *Upload to CleverTap:*
   - Go to *Settings* > *User Upload* and upload the CSV file.
   - Make sure to map the custom property correctly.

#### *4. Create a Segment for Uploaded Users*

1. *Go to Segments:*
   - Create a new segment of users with the custom property uploaded_users = true.
   
2. *Filter Users:*
   - Use the filter criteria to target users who have the uploaded_users property set to true.

---

By following these steps, you will have successfully integrated CleverTap, created a user profile, triggered events, set up email campaigns, and managed user segments. Let me know if you need further assistance!
